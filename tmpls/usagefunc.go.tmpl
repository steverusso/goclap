
func (*{{ .TypeName }}) printUsage(to *os.File) {
	fmt.Fprintf(to, `{{ .Parents }}{{ .UsgName }} - {{ .Data.Blurb }}

usage:{{ range .UsageLines }}
   {{ . }}{{ end }}

{{- if .HasOptions }}
	{{- $nameWidth := .OptNameColWidth }}
	{{- $argNameWidth := .OptArgNameColWidth }}

options:
	{{- range .Opts }}
		{{- if eq $argNameWidth 0 -}}
			{{- printf "\n   %-*s   %s" $nameWidth .UsgNames .Data.Blurb -}}
		{{- else -}}
			{{- printf "\n   %-*s %-*s   %s" $nameWidth .UsgNames $argNameWidth .UsgArgName .Data.Blurb -}}
		{{- end -}}
	{{ end -}}
{{ end -}}

{{- if .HasArgs }}
{{- $w := .ArgNamesColWidth }}

arguments:
{{- range .Args }}
   {{ printf "%-*s   %s" $w .UsgName .Data.Blurb -}}
{{ end -}}{{ end -}}
{{ if .HasSubcmds }}
{{- $w := .SubcmdNamesColWidth }}

subcommands:
{{- range .Subcmds }}
   {{ printf "%-*s   %s" $w .UsgName .Data.Blurb -}}
{{ end -}}{{ end }}
{{- if and .IsRoot .HasSubcmds }}

run '%[1]s <subcommand> -h' for more information on specific commands.{{ end }}
`, os.Args[0])
}
